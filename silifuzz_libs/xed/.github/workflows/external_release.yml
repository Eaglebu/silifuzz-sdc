#BEGIN_LEGAL
#
#Copyright (c) 2024 Intel Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#  
#END_LEGAL
name: External release
permissions: write-all
on:
  push:
    branches:
      - external

jobs:
  external_release:
    runs-on:
      - self-hosted
      - xed-runners
      - Linux
    steps:
      - name: Checkout external branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0
          ref: external
          path: external
      - name: Get external commit message description
        id: commit-body
        run: |
          cd external
          echo 
          echo "$(git log -1 --pretty=%B)" >> ../body.txt
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0
          ref: main
          path: main
      - name: Get version
        id: get-version
        run: echo "version=$(cat external/VERSION)" >> $GITHUB_OUTPUT
      - name: Git config
        uses: ./main/.github/actions/set-git-credentials
        with:
          token: ${{ secrets.PAT }}
          path: main
          remote: origin
      - name: Replace .rc with .external tag on main
        run: |
          cd main
          set tag_sha=$(git rev-list -n 1 "${{steps.get-version.outputs.version}}.rc")
          echo $tag_sha
          git push --delete origin "${{steps.get-version.outputs.version}}.external" || true
          git push --delete origin "${{steps.get-version.outputs.version}}.rc" || true
          git tag -d  "${{steps.get-version.outputs.version}}.rc" || true
          git tag --force "${{steps.get-version.outputs.version}}.external" -a -F ../body.txt $tag_sha
          git push origin "${{steps.get-version.outputs.version}}.external"
      - name: Git config
        uses: ./main/.github/actions/set-git-credentials
        with:
          token: ${{ secrets.PAT }}
          path: external
          remote: origin
      - name: Tag external branch
        run: |
          cd external
          git push --delete origin "${{steps.get-version.outputs.version}}" || true
          git tag -d  "${{steps.get-version.outputs.version}}" || true
          git tag --force "${{steps.get-version.outputs.version}}" -a -F ../body.txt ${{ github.sha }}
          git push origin "${{steps.get-version.outputs.version}}"
      - name: Git config external repo
        uses: ./main/.github/actions/set-git-credentials
        with:
          token: ${{ secrets.PAT }}
          path: external
          remote: external
          repository: ${{ secrets.EXTERNAL_REPO }}
      - name: Push to external repo
        run: |
          cd external
          git push external HEAD:main
      - name: Tag external repo
        run: |
          cd external
          git push --delete external "${{steps.get-version.outputs.version}}" || true
          git tag --force "${{steps.get-version.outputs.version}}" -a -F ../body.txt ${{ github.sha }}
          git push external "${{steps.get-version.outputs.version}}"
          