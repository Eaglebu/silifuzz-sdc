// Copyright 2022 The SiliFuzz Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.)

#include <cstddef>
#include <iostream>

#include "./util/arch.h"
#include "./util/ucontext/ucontext_types.h"

using UContext = silifuzz::UContext<silifuzz::X86_64>;
using GRegSet = silifuzz::GRegSet<silifuzz::X86_64>;

int main() {
  std::cout << R"(// Copyright 2024 The SiliFuzz Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.)"
            << '\n'
            << '\n';
  std::cout
      << "// Automatically generated by ucontext_offsets_gen.cc, do not change"
      << '\n';
  std::cout
      << "#ifndef THIRD_PARTY_SILIFUZZ_UTIL_UCONTEXT_X86_64_UCONTEXT_OFFSETS_H_"
      << '\n';
  std::cout
      << "#define THIRD_PARTY_SILIFUZZ_UTIL_UCONTEXT_X86_64_UCONTEXT_OFFSETS_H_"
      << '\n';
  std::cout << "#define UCONTEXT_FPREGS_OFFSET 0x" << std::hex
            << offsetof(UContext, fpregs) << '\n';
  std::cout << "#define UCONTEXT_GREGS_OFFSET 0x" << std::hex
            << offsetof(UContext, gregs) << '\n';
  std::cout << "#define GREGS_R8_OFFSET 0x" << std::hex << offsetof(GRegSet, r8)
            << '\n';
  std::cout << "#define GREGS_R9_OFFSET 0x" << std::hex << offsetof(GRegSet, r9)
            << '\n';
  std::cout << "#define GREGS_R10_OFFSET 0x" << std::hex
            << offsetof(GRegSet, r10) << '\n';
  std::cout << "#define GREGS_R11_OFFSET 0x" << std::hex
            << offsetof(GRegSet, r11) << '\n';
  std::cout << "#define GREGS_R12_OFFSET 0x" << std::hex
            << offsetof(GRegSet, r12) << '\n';
  std::cout << "#define GREGS_R13_OFFSET 0x" << std::hex
            << offsetof(GRegSet, r13) << '\n';
  std::cout << "#define GREGS_R14_OFFSET 0x" << std::hex
            << offsetof(GRegSet, r14) << '\n';
  std::cout << "#define GREGS_R15_OFFSET 0x" << std::hex
            << offsetof(GRegSet, r15) << '\n';
  std::cout << "#define GREGS_RAX_OFFSET 0x" << std::hex
            << offsetof(GRegSet, rax) << '\n';
  std::cout << "#define GREGS_RBX_OFFSET 0x" << std::hex
            << offsetof(GRegSet, rbx) << '\n';
  std::cout << "#define GREGS_RCX_OFFSET 0x" << std::hex
            << offsetof(GRegSet, rcx) << '\n';
  std::cout << "#define GREGS_RDX_OFFSET 0x" << std::hex
            << offsetof(GRegSet, rdx) << '\n';
  std::cout << "#define GREGS_RBP_OFFSET 0x" << std::hex
            << offsetof(GRegSet, rbp) << '\n';
  std::cout << "#define GREGS_RSP_OFFSET 0x" << std::hex
            << offsetof(GRegSet, rsp) << '\n';
  std::cout << "#define GREGS_RSI_OFFSET 0x" << std::hex
            << offsetof(GRegSet, rsi) << '\n';
  std::cout << "#define GREGS_RDI_OFFSET 0x" << std::hex
            << offsetof(GRegSet, rdi) << '\n';
  std::cout << "#define GREGS_RIP_OFFSET 0x" << std::hex
            << offsetof(GRegSet, rip) << '\n';
  std::cout << "#define GREGS_EFLAGS_OFFSET 0x" << std::hex
            << offsetof(GRegSet, eflags) << '\n';
  std::cout << "#define GREGS_FS_BASE_OFFSET 0x" << std::hex
            << offsetof(GRegSet, fs_base) << '\n';
  std::cout << "#define GREGS_GS_BASE_OFFSET 0x" << std::hex
            << offsetof(GRegSet, gs_base) << '\n';
  std::cout << "#define GREGS_CS_OFFSET 0x" << std::hex << offsetof(GRegSet, cs)
            << '\n';
  std::cout << "#define GREGS_SS_OFFSET 0x" << std::hex << offsetof(GRegSet, ss)
            << '\n';
  std::cout << "#define GREGS_FS_OFFSET 0x" << std::hex << offsetof(GRegSet, fs)
            << '\n';
  std::cout << "#define GREGS_GS_OFFSET 0x" << std::hex << offsetof(GRegSet, gs)
            << '\n';
  std::cout << "#define GREGS_ES_OFFSET 0x" << std::hex << offsetof(GRegSet, es)
            << '\n';
  std::cout << "#define GREGS_DS_OFFSET 0x" << std::hex << offsetof(GRegSet, ds)
            << '\n';
  std::cout << "#endif  // "
               "THIRD_PARTY_SILIFUZZ_UTIL_UCONTEXT_X86_64_UCONTEXT_OFFSETS_H_"
            << '\n';
}
